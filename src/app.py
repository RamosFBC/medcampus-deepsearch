import streamlit as st
import pandas as pd

from open_deep_research.multi_agent import graph
from inputs import input_prompt
import asyncio
from dotenv import load_dotenv
import os

st.set_page_config(
    page_title="Open Deep Research", page_icon=":guardsman:", layout="wide"
)
load_dotenv()
agent = graph
input_prompt = input_prompt


async def run_graph(initial_input):
    """Runs the graph asynchronously and prints the result."""
    # You might need to pass a config here if your graph expects it
    # e.g., config = {"configurable": {"search_api": "tavily", "supervisor_model": "your_model", "researcher_model": "your_model"}}
    result = await graph.ainvoke(initial_input)

    return result


data_path = "data/combined_table_cleaned.csv"
# Load the CSV file into a DataFrame
df = pd.read_csv(data_path)

# Map all specialties to a list
specialties = sorted(df["Especialidade"].unique().tolist())
estados = [
    "Paran√°",
    "S√£o Paulo",
    "Rio de Janeiro",
    "Minas Gerais",
    "Bahia",
    "Rio Grande do Sul",
    "Santa Catarina",
    "Cear√°",
    "Pernambuco",
    "Par√°",
    "Maranh√£o",
    "Goi√°s",
    "Esp√≠rito Santo",
    "Alagoas",
    "Sergipe",
    "Para√≠ba",
    "Rio Grande do Norte",
    "Tocantins",
    "Amap√°",
    "Rond√¥nia",
    "Acre",
    "Mato Grosso do Sul",
    "Mato Grosso",
    "Distrito Federal",
]

st.title("üéì MedCampus")
st.subheader("Esteja preparado, esteja na frente.")

with st.form(key="input_form"):
    faculdade = st.text_input("Em qual faculdade voc√™ estuda?")
    ciclo = st.selectbox(
        "Qual ciclo voc√™ est√° cursando?", options=["B√°sico", "Cl√≠nico" "Internato"]
    )
    especialidade = st.selectbox(
        "Qual especialidade voc√™ pensa em fazer?", options=specialties
    )
    local = st.selectbox("Qual local voc√™ pensa em fazer resid√™ncia?", options=estados)
    preocupacoes = st.text_area(
        "Quais s√£o suas preocupa√ß√µes ou d√∫vidas em rela√ß√£o √† sua carreira m√©dica?"
    )
    # Create a text input for the user to enter their prompt
    user_input = st.text_area(
        "Digite sua pergunta ou solicita√ß√£o:", value=input_prompt, height=200
    )

    # Create a submit button
    if st.form_submit_button(label="Enviar"):
        # Display the user input
        st.write("Voc√™ digitou:")
        st.write(user_input)

        # Display the other inputs
        st.write("Faculdade:", faculdade)
        st.write("Ciclo:", ciclo)
        st.write("Especialidade:", especialidade)
        st.write("Local:", local)
        st.write("Preocupa√ß√µes:", preocupacoes)

        # Prepare the input for the agent
        initial_input = {
            "messages": [
                {
                    "role": "user",
                    "content": user_input.format(
                        especialidades=especialidade,
                        estado=local,
                        faculdade=faculdade,
                        preocupacoes=preocupacoes,
                    ),
                }
            ]
        }
        # Run the agent asynchronously
        result = asyncio.run(run_graph(initial_input))
        # Display the result
        st.write("Resultado:")
        st.write(result["final_report"])
        st.write(initial_input)
    specialty_data = df[df["Especialidade"] == especialidade]
    st.write(specialty_data)
# Display the DataFrame in Streamlit
if st.checkbox("debug"):
    st.dataframe(df)
